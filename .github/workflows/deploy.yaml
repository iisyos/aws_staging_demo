name: Deploy

on: workflow_dispatch

env:
  TF_VERSION: 1.3.7
  TG_VERSION: 0.46.2
  WORK_DIR: terraform/user_resources
  STATE_BUCKET: ${{ secrets.STATE_BUCKET }}
  ENVIRONMENT: ${{ github.actor }}
  ECR_REPOSITORY: app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/nginx/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URL=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" > $GITHUB_ENV
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false
      - name: Setup Terragrunt
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v${TG_VERSION}/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt --version
      - name: Terragrunt apply
        working-directory: ${{ env.WORK_DIR }}
        run: terragrunt apply --auto-approve
      - name: Wait for ECS services to be stable
        working-directory: ${{ env.WORK_DIR }}
        run: | 
          terragrunt output -json > output.json
          ECS_CLUSTER_NAME="$(cat output.json | jq -r '.ecs_cluster_name.value')"
          ECS_SERVICE_NAME="$(cat output.json | jq -r '.ecs_service_name.value')"
          aws ecs wait services-stable  \
            --cluster $ECS_CLUSTER_NAME \
            --service $ECS_SERVICE_NAME
